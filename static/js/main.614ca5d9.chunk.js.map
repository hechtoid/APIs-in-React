{"version":3,"sources":["components/weathergeo.js","components/weatheradd.js","components/weathertemps.js","components/weatherbox.js","components/union.js","components/stockton.js","components/sansome.js","components/vanNess.js","components/broadway.js","components/transitstop.js","components/transit.js","components/transitall.js","App.js","serviceWorker.js","index.js"],"names":["WeatherGeo","props","state","weather","axios","get","this","geo","then","res","data","setState","hourlies","hourly","key","map","hour","timestamp","Date","setUTCSeconds","time","className","getHours","apparentTemperature","temperature","summary","precipProbability","React","Component","WeatherAdd","name","geocoords","handleSubmit","bind","e","spot","preventDefault","post","currentTarget","value","onSubmit","type","onChange","updateName","placeholder","updateGeo","WeatherBox","href","Union","buss","dateParser","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","zulu","parse","toLocaleTimeString","busss","bus","MonitoredVehicleJourney","LineRef","DestinationName","MonitoredCall","AimedArrivalTime","ExpectedArrivalTime","Stockton","Sansome","VanNess","Broadway","TransitStop","stopCode","agency","stop","StopPointName","updateAgency","selected","updateStopCode","Transit","useState","pane","setPane","id","onClick","TransitAll","agencies","console","log","Id","ShortName","Name","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.614ca5d9.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass WeatherGeo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weather: {}\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`api/weather/geo/${this.props.geo}`)\n            .then(res => {\n                const weather = res.data.data;\n                this.setState({ weather });\n            })\n    }\n\n\n    render() {\n        let hourlies\n        if (this.state.weather.hourly) {\n            let key = 0\n            hourlies = this.state.weather.hourly.data.map(hour => {\n                let timestamp = new Date(0)\n                timestamp.setUTCSeconds(hour.time)\n                return (\n                    <div className=\"hourly-item\"\n                        key={key++}\n                    >\n                        <span className=\"hour\"> {timestamp.getHours()} </span> o'clock\n        <br></br>\n                        {hour.apparentTemperature}° but {hour.temperature}°.\n        <br></br>\n                        {hour.summary}{hour.precipProbability === 0 ?  '' :`, ${hour.precipProbability * 100}% chance of precipitation.`}\n        <br></br>\n      </div>\n                )\n\n\n            })\n        }\n        return (\n\n            <div className=\"weather-tele\">\n                WEATHER-TELE:\n                <br></br>\n                <br></br>\n                <div className=\"hourly-holder\">\n                    {hourlies}\n                </div>\n\n            </div>\n        );\n    }\n\n}\nexport default WeatherGeo;\n","import React from 'react';\nimport axios from 'axios';\n\nclass WeatherAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: 'null island',\n            geocoords: '0,0'\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        let spot = {\n            name: this.state.name,\n            geocoords: this.state.geocoords\n        }\n        e.preventDefault();\n        axios.post('api/weather/spots/', spot)\n    }\n\n    updateName() {\n        return e => this.setState({\n            name: e.currentTarget.value\n        });\n    }\n    updateGeo() {\n        return e => this.setState({\n            geocoords: e.currentTarget.value\n        });\n    }\n\nrender() {\n    return (\n        <div className=\"weather-add\">\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\"\n                value={this.state.name}\n                onChange={this.updateName()}\n                placeholder=\"name of the spot\"\n                />\n                <input type=\"text\"\n                    value={this.state.geocoords}\n                    onChange={this.updateGeo()}\n                    placeholder=\"Lat,Long\"\n                />\n                <input type=\"submit\" value=\"Add Spot\" />\n\n            </form>\n\n        </div>\n\n    )\n}\n\n\n}\n\nexport default WeatherAdd","import React from 'react';\nimport axios from 'axios';\n\nclass WeatherTemps extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            spots: [],\n            spoots: [],\n            weatherspots: []\n        }\n        this.getWeatherByGeo = this.getWeatherByGeo.bind(this)\n    }\n\n    componentDidMount() {\n        let spots = []\n        axios.get('api/weather/spots')\n            .then( res => {\n                let spots = res.data   \n            this.setState({spots})\n        })\n    }\n\n    getWeatherByGeo (geo) {\n        return axios.get('api/weather/geo/'+geo)\n        .then(res => {\n            this.res = res.data\n            return this.res\n        })\n    }\n\naddTempToSpots(){\n\n}\n\nrender() {\n    let weatherspots\n\n    // this.state.spots.map((spot) => {\n        // console.log(spot)\n         if (this.state.spots[0]){\n             axios.get('api/weather/geo/' + this.state.spots[0].geocoords).then(res =>{\n            console.log(res.data)\n        }).catch(\n            console.log('wtf')\n        )\n         }\n        // this.getWeatherByGeo(spot.geocoords).then(res => {\n            // weatherspots.push({ 'name': spot.name, 'temp': res.data.currently.apparentTemperature})\n            // })\n        // console.log(spot)\n        // })\n\n\nreturn (<div className=\"weather-spots\">{weatherspots}</div>)       \n}\n}\nexport default WeatherTemps;\n","import React from 'react';\nimport WeatherGeo from './weathergeo.js';\nimport WeatherAdd from './weatheradd.js';\nimport WeatherTemps from './weathertemps.js';\n\n\nfunction WeatherBox() {\n\n    return (\n    <div className=\"weather-box\">\n        <header>Weather Snippets</header> \n            <br></br>\n            <WeatherAdd />\n            <br></br>\n        <div className=\"weather-boxes\">\n            <WeatherGeo geo='37.7998,-122.4063'/>\n            {/* <WeatherGeo /> */}\n            {/* <WeatherTemps /> */}\n        </div>\n\n            <a href=\"https://darksky.net/poweredby/\"> Powered by Dark Sky</a>\n    \n    </div>\n    )\n\n\n\n}\n\nexport default WeatherBox;\n\n\n\n// tele'https://api.forecast.io/forecast/cf20d2bc8131e875da42c2f5f85d7282/37.7998,-122.4063?exclude=[,minutely,flags,]`)';\n \n\n// tam 'https://api.forecast.io/forecast/cf20d2bc8131e875da42c2f5f85d7282/37.9203,-122.5857?exclude=[,minutely,flags,]`)';\n","import React from 'react';\nimport axios from 'axios';\n\nclass Union extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16750`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='45'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Union\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Union;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Stockton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=16513`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                if (bus.MonitoredVehicleJourney.LineRef === '30' \n                || bus.MonitoredVehicleJourney.LineRef === '45' \n                || bus.MonitoredVehicleJourney.LineRef ==='91'){\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                    )\n                }\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Stockton\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Stockton;","import React from 'react';\nimport axios from 'axios';\n\nclass Sansome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=42006`)\n            .then(res => {\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                if (bus.MonitoredVehicleJourney.LineRef==='4'){\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            }\n            })   \n        }\n        return (\n            <div className=\"buss\">\n                Sansome\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Sansome;\n","import React from 'react';\nimport axios from 'axios';\n\nclass VanNess extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=GG&stopCode=40032`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n                Van Ness\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default VanNess;\n","import React from 'react';\nimport axios from 'axios';\n\nclass Broadway extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buss: []\n\n        }\n        this.dateParser=this.dateParser.bind(this)\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=SF&stopCode=13082`)\n        .then(res => {\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    render() {\n        let busss\n        if (this.state.buss){\n            let key = 0\n            busss = this.state.buss.map(bus=>{\n                return(\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })    \n        }\n        return (\n            <div className=\"buss\">\n               \tBroadWay\n                {busss}\n            </div>\n        );\n    }\n\n}\nexport default Broadway;\n","import React from 'react';\nimport axios from 'axios';\n\nclass TransitStop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stopCode: '16513',\n            agency: 'SF',\n            buss: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n        .then(res => {\n            // console.log(res.data)\n            let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n            this.setState({ buss });\n        })\n    }\n\n    handleSubmit(e) {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n            .then(res => {\n                // console.log(res.data)\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    updateStopCode() {\n        return e => this.setState({\n            stopCode: e.currentTarget.value\n        })\n    }\n    updateAgency() {\n        return e => this.setState({\n            agency: e.currentTarget.value\n        })\n    }\n\n\n    render() {\n        let busss\n        let stop\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                stop = bus.MonitoredVehicleJourney.MonitoredCall.StopPointName\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })   \n        }\n        return (\n            <div className = \"stop\" >\n            <div className=\"stop-left\">\n                Agency ShortList:\n                <br></br>\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                >\n                <option selected value=\"SF\">SF Muni</option>\n                <option selected value=\"GG\">Golden Gate Transit</option>\n                <option selected value=\"AC\">AC Transit</option>\n                <option selected value=\"MA\">Marin Transit</option>\n                <option selected value=\"SM\">SamTrans</option>\n            </select>\n            <br></br>\n            Agency by Code:\n            <input type=\"text\"\n                value={this.state.agency}\n                onChange={this.updateAgency()}\n                placeholder=\"transit agency\"\n            />\n            <form onSubmit={this.handleSubmit}>\n                Stop ID:\n                <br></br>\n                <input type=\"text\"\n                    value={this.state.stopCode}\n                    onChange={this.updateStopCode()}\n                />\n                <br></br>\n                <input type=\"submit\" value=\"Update\" />\n                <br></br>\n            </form>\n            </div>\n            <div className=\"stop-right\">\n                { stop }\n                { busss }\n            </div>\n            </div>\n        );\n    }\n\n}\nexport default TransitStop;\n","import React, { useState } from 'react';\nimport Union from './union';\nimport Stockton from './stockton';\nimport Sansome from './sansome';\nimport VanNess from './vanNess';\nimport Broadway from './broadway';\nimport TransitStop from './transitstop';\n\nfunction Transit() {\n  let [pane, setPane] = useState('marin');\n  return (\n    <div className=\"transit-master\">\n      <div className=\"transit-switcher\">\n        <div id='marin' className={pane === 'marin' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('marin')}>MARIN</div>\n        <div className={pane === 'frisco' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('frisco')}>FRISCO</div>\n        <div className={pane === 'user' ? 'transit-switch-on' : 'transit-switch-off'} onClick={() => setPane('user')}>OTHER</div>\n      </div>\n    <div className=\"transit\">\n        <div className={pane === 'marin' ? 'transit-on' : 'transit-off'} >\n          <Sansome />\n          <VanNess />\n      </div>\n        <div className={pane === 'frisco' ? 'transit-on' : 'transit-off'}>\n          <Stockton />\n          <Union />\n          <Broadway />\n      </div>\n      <div className={pane === 'user' ? 'transit-on' : 'transit-off'}>\n          <TransitStop />\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Transit;\n","import React from 'react';\nimport axios from 'axios';\n\nclass TransitAll extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stopCode: '16513',\n            agency: 'SF',\n            buss: [],\n            agencies: []\n        }\n        this.dateParser=this.dateParser.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        axios.get(`http://api.511.org/transit/operators?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON`)\n        .then(res => {\n            console.log(res.data)\n            let agencies = res.data;\n            this.setState({ agencies });\n        })\n    }\n\n    handleSubmit(e) {\n        axios.get(`http://api.511.org/transit/StopMonitoring?api_key=72939361-85f9-4019-aa55-d62e4e7e2e59&Format=JSON&agency=${this.state.agency}&stopCode=${this.state.stopCode}`)\n            .then(res => {\n                console.log(res.data)\n                let buss = res.data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit;\n                this.setState({ buss });\n            })\n    }\n\n    dateParser(zulu){\n        return new Date(Date.parse(zulu)).toLocaleTimeString()\n    }\n\n    updateStopCode() {\n        return e => this.setState({\n            stopCode: e.currentTarget.value\n        })\n    }\n    updateAgency() {\n        return e => this.setState({\n            agency: e.currentTarget.value\n        })\n    }\n\n\n    render() {\n        let busss\n        let stop\n        let agencies\n        if (this.state.agencies){\n            agencies = this.state.agencies.map(agency => {\n                return (\n                    <div className=\"agency\" key={agency.Id}>\n                        {agency.Id} - {agency.ShortName?agency.ShortName:agency.Name} <span className='agency-full-name'>{agency.ShortName&&agency.ShortName!==agency.Name?`(${agency.Name})`:''}</span>\n                    </div>\n                )\n            })\n        }\n        if (this.state.buss){\n            let key = 0 \n            busss = this.state.buss.map(bus => {\n                stop = bus.MonitoredVehicleJourney.MonitoredCall.StopPointName\n                return (\n                    <div className=\"bus\" key={key++}>\n                        <span className=\"line\">{bus.MonitoredVehicleJourney.LineRef}</span> => {bus.MonitoredVehicleJourney.DestinationName}\n                        <br></br>\n                        <span className=\"aimed\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.AimedArrivalTime)}</span> => <span className=\"expected\">{this.dateParser(bus.MonitoredVehicleJourney.MonitoredCall.ExpectedArrivalTime)}</span>\n                    </div>\n                )\n            })   \n        }\n        return (\n            <div className = \"transit-all\" >\n                {agencies}\n            {/* <div className=\"stop-left\">\n                Agency ShortList:\n                <br></br>\n                <select\n                    className=\"agency-select\"\n                    value={this.state.agency}\n                    onChange={this.updateAgency()}\n                >\n                <option selected value=\"SF\">SF Muni</option>\n                <option selected value=\"GG\">Golden Gate Transit</option>\n                <option selected value=\"AC\">AC Transit</option>\n                <option selected value=\"MA\">Marin Transit</option>\n                <option selected value=\"SM\">SamTrans</option>\n            </select>\n            <br></br>\n            Agency by Code:\n            <input type=\"text\"\n                value={this.state.agency}\n                onChange={this.updateAgency()}\n                placeholder=\"transit agency\"\n            />\n            <form onSubmit={this.handleSubmit}>\n                Stop ID:\n                <br></br>\n                <input type=\"text\"\n                    value={this.state.stopCode}\n                    onChange={this.updateStopCode()}\n                />\n                <br></br>\n                <input type=\"submit\" value=\"Update\" />\n                <br></br>\n            </form>\n            </div>\n            <div className=\"stop-right\">\n                { stop }\n                { busss }\n            </div> */}\n            </div>\n        );\n    }\n\n}\nexport default TransitAll;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport WeatherBox from './components/weatherbox'\nimport Transit from './components/transit'\nimport TransitStop from './components/transitstop'\nimport TransitAll from './components/transitall'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Route exact path=\"/weather\" component={WeatherBox} />\n      <Route exact path=\"/transit\" component={Transit} />\n      <Route exact path=\"/transitstop\" component={TransitStop} />\n      <Route exact path=\"/transitall\" component={TransitAll} />\n      {/* <i>powered by React</i> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}